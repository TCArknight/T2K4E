<?xml version="1.0" encoding="UTF-8"?>

<!-- This file contains the assortment of miscellaneous gear/equipment for the game
      system. Most gear is just mundane items, but a few confer special benefits via
      scripts. There are also a few that can be used as generic entries that users can
      customize without having to add new entries via the Editor.

      The behaviors of each piece of gear are controlled via a combination of field
      values, tags, and XML attributes. A brief summary of the most important of these
      is provided below:

      "stacking" attribute: controls the behavior of multiple pieces of the gear with
          respect to merging separate pieces or always keeping them distinct
      "private" attribute: controls whether the gear is made visible to the user within
          the Editor when creating a new piece of gear as a copy of an existing thing
      "isunique" attribute: controls whether the user can only ever add a single
          instance of the thing to an actor versus adding multiple instances
      "Equipment" tags: The "Equipment.CustomGear" tag indicates gear that the user can
          modify the name for
      "thing" tags: The "thing.holder" tag indicates gear that can both be held within
          other holders and can hold other gear, while the "thing.holder_top" tag
          indicates gear that can only hold other (but cannot be held); omitting both
          of these tags implies the gear can only be held by suitably flagged holders
      "grUserName" field: If the "Equipment.CustomGear" tag is assigned, this field
          provides the default name for the item until the user changes it
-->

<document signature="Hero Lab Data">

  <!-- Cargo Space location - automatically bootstrapped to every vehicle -->
  <thing
    id="eqCargoSpace"
    name="Cargo Space"
    compset="VehicleGear"
    isprivate="yes"
    uniqueness="unique"
    description="Any equipment carried by the vehicle is held in this container.{br}You can move an item from one container to another by clicking the &quot;Gear&quot; button beside its info button.">
    <tag group="Helper" tag="HasCargoSpace"/>
    <tag group="Helper" tag="IsCargoSpace"/>
    <tag group="thing" tag="holder_top"/>
    <tag group="Print" tag="NoPrint"/>
    <gear>#vehiclecargocarried[] = field[gearHeld].value</gear>
    <eval phase="Setup" priority="1000" index="1"><![CDATA[
	perform forward[Helper.HasCargoSpace]
	~if (field[gearHeld].value <> 0) then
	~  notify "Cargo Space holding items"
	~  endif
	]]></eval>
    <eval phase="Final" priority="1000" index="2"><![CDATA[
	if (field[gearHeld].value <> 0) then
	  ~ notify "Cargo Space holding items"
	  foreach gear in this
	    perform eachpick.assign[Helper.InCargoSpace]
		nexteach
	  endif
	]]></eval>
    </thing>

	
  </document>
